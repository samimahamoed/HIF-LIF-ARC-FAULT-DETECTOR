.TH "srv_watchdog.h" 3 "Wed Oct 29 2014" "Version V0.0" "AQ0X" \" -*- nroff -*-
.ad l
.nh
.SH NAME
srv_watchdog.h \- 
.PP
File with support for watchdog( for release version) and watchdog tunning (debug/release)  

.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBWATCHDOG_PRODUCTION_MODE\fP   0"
.br
.ti -1c
.RI "#define \fBWATCHDOG_TUNNING_TIMEOUT\fP   3 /* initial value in miliseconds */"
.br
.ti -1c
.RI "#define \fBsrv_wdg_init\fP()   \fBsrv_wdg_init_fn\fP()"
.br
.ti -1c
.RI "#define \fBsrv_wdg_kick\fP()   \fBsrv_wdg_kick_fn\fP()"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBsrv_wdg_init_fn\fP (void)"
.br
.RI "\fIWatchdog tunning init function\&. \fP"
.ti -1c
.RI "void \fBsrv_wdg_kick_fn\fP (void)"
.br
.RI "\fIWatchdog tunning kick function\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
File with support for watchdog( for release version) and watchdog tunning (debug/release) 


.PP
Definition in file \fBsrv_watchdog\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define srv_wdg_init()   \fBsrv_wdg_init_fn\fP()"

.PP
Definition at line 27 of file srv_watchdog\&.h\&.
.PP
Referenced by main()\&.
.SS "#define srv_wdg_kick()   \fBsrv_wdg_kick_fn\fP()"

.PP
Definition at line 28 of file srv_watchdog\&.h\&.
.PP
Referenced by __attribute__(), algorithm_taskx(), ir_sen_taskx(), main(), mfield_x_sen_taskx(), uv_sen_taskx(), x_loop(), and x_start()\&.
.SS "#define WATCHDOG_PRODUCTION_MODE   0"

.PP
Definition at line 14 of file srv_watchdog\&.h\&.
.SS "#define WATCHDOG_TUNNING_TIMEOUT   3 /* initial value in miliseconds */"

.PP
Definition at line 15 of file srv_watchdog\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void srv_wdg_init_fn (void)"

.PP
Watchdog tunning init function\&. 
.PP
Definition at line 96 of file srv_watchdog\&.c\&.
.PP
References FOSC_CPU, and watchdog_timeout\&.
.PP
Referenced by __attribute__()\&.
.PP
.nf
97 {
98 
99     // Setup tunning timer
100     
101     T4CON = 0;                    // Clear the register
102     T4CONbits\&.TCS    = 0;         // Internal clock Fosc/4   
103     T4CONbits\&.TCKPS = 1;          //    1:8 prescaling    
104 
105 
106 
107     PR4 = (((FOSC_CPU/2L)/8)*watchdog_timeout)/(1000L); 
108     
109     IPC6bits\&.T4IP = 1;            // Set Timer4 Interrupt Priority Level
110     IFS1bits\&.T4IF = 0;            //Clear the Timer4 Interrupt Flag
111     IEC1bits\&.T4IE = 1;            //Enable Timer4I nterrupt Service Routine
112     T4CONbits\&.TON = 1;            //Start Timer 4
113 
114 
115 
116 
117     
118 }
.fi
.SS "void srv_wdg_kick_fn (void)"

.PP
Watchdog tunning kick function\&. 
.PP
Definition at line 126 of file srv_watchdog\&.c\&.
.PP
.nf
127 {
128     T4CONbits\&.TON = 0;
129     TMR4 = 0;
130     T4CONbits\&.TON = 1;
131 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for AQ0X from the source code\&.
