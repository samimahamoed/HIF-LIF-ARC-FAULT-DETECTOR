digraph "main"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="main",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="algorithm_notifyx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d1b/a00015.html#a93269cdec3e21934aa9395440a2de605",tooltip="Algorithm module notification function. "];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="algorithm_wake",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d87/a00032.html#a42ed16c7ef20e0c0031fe7ba7ae377b3",tooltip="Main processing loop for algorithm module. "];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="algorithm_message_arrived\l_ntf_isr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d87/a00032.html#a85471d58eae93d5d7e7e2b52e2b915d3",tooltip="Causes that system will send notification to the module as this cannot be done directly because the f..."];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="x_task_send_irq_sync",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d79/a00030.html#a9953756bc7c83e5f2c36830396136e75",tooltip="OS interrupt notification timer. "];
  Node3 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="hwio_execute_gpio_task",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d84/a00052.html#a0af9eae455fbdf4e77def5bfffa109cb",tooltip="gpio port control helper function "];
  Node3 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="ir_record_reset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d45/a00011.html#a1c9872e93491d95a24ab0bc723d39a74"];
  Node3 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="ir_sen_hif_check",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d45/a00011.html#a86870a0e00601a92277e689447739ce9"];
  Node3 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="nov_store",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d52/a00023.html#a90aef186f45a15d94bf0247122194991",tooltip="Writes NOV storage to EEPROM. "];
  Node2 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="x_send_event",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d79/a00030.html#a4bc3d03c8d62c8237329ed4e969fbc1b",tooltip="OS event scheduling function. "];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="algorithm_taskx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d1b/a00015.html#a1d182ae18a9176c2a1e28cc654dc0e43",tooltip="Algorithm task function. "];
  Node11 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="x_delete_timer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d79/a00030.html#ab69e9af4cfa717e870d587906283635c",tooltip="OS timer delete request. "];
  Node11 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="x_schedule_timer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d79/a00030.html#a9e3befaa21e83f196f74201deed85346",tooltip="OS timer configuration request. "];
  Node11 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="x_send_notify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d79/a00030.html#ae17b0bb16da3c471bb6074bb4c4d0fee",tooltip="OS notification processing request. "];
  Node1 -> Node15 [color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="hwio_configure_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d84/a00052.html#a46e02bcdf3bfe45545879afb71919d47",tooltip="Low level gpio/analog configuration. "];
  Node15 -> Node16 [color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="hwio_configure_analog_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de0/a00050.html#a33a6b6b17536decccd19c7132479c20b",tooltip="Low level analog. "];
  Node16 -> Node17 [color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="Delay5us",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d33/a00027.html#a3b0017f6ec0e04a6435bba00fe325294",tooltip="Assembler function - 5us granularity loop delay. "];
  Node15 -> Node17 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node18 [color="midnightblue",fontsize="10",style="solid"];
  Node18 [label="hwio_get_analog",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d84/a00052.html#a5770775aca185380868838e69ec20215",tooltip="Retrives A/D hardware buffer value. "];
  Node1 -> Node19 [color="midnightblue",fontsize="10",style="solid"];
  Node19 [label="ir_sen_notifyx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d45/a00011.html#a36c6c2cdf9aa5844371e742330789dad",tooltip="ir module notification function. "];
  Node19 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node19 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node19 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node20 [color="midnightblue",fontsize="10",style="solid"];
  Node20 [label="ir_sen_taskx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d45/a00011.html#a24529100c87dfc257e9b56f7f0bcfa78",tooltip="ir sensor module task function. "];
  Node20 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node21 [color="midnightblue",fontsize="10",style="solid"];
  Node21 [label="light_sen_notifyx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d86/a00012.html#a317b03892739257278fd51ab8003962d",tooltip="light module notification function. "];
  Node21 -> Node22 [color="midnightblue",fontsize="10",style="solid"];
  Node22 [label="light_sen_mark_false\l_postives",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d32/a00041.html#acef1622ec5c40fe90bf6184813716e34",tooltip="checks the number of false positives within supervision (100ms | 5 cycle) time window ..."];
  Node21 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node21 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node21 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node23 [color="midnightblue",fontsize="10",style="solid"];
  Node23 [label="light_sen_taskx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d86/a00012.html#ae9aa2f8b8e90a92755efbcd161c67bc0",tooltip="light sensor module task function. "];
  Node23 -> Node24 [color="midnightblue",fontsize="10",style="solid"];
  Node24 [label="light_sen_false_positive\l_adjustment_task",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d32/a00041.html#a05bd338db50fc948cf13db4f250894da",tooltip="checks the number of false positives within supervision (100ms | 5 cycle) time window ..."];
  Node23 -> Node25 [color="midnightblue",fontsize="10",style="solid"];
  Node25 [label="light_sen_sensor_element\l_sv_task",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d32/a00041.html#ae68a20cad10654012eae75a1941f53db",tooltip="Supervises light sensors element by measuring sensor respond for different illumination level..."];
  Node23 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node26 [color="midnightblue",fontsize="10",style="solid"];
  Node26 [label="mfield_x_sen_notifyx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd4/a00013.html#ac28a2b5f3fa92c0593446e15a63a501c",tooltip="module notification function. "];
  Node26 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node26 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node26 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node27 [color="midnightblue",fontsize="10",style="solid"];
  Node27 [label="mfield_x_sen_taskx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd4/a00013.html#a72e9235043dc4a8469143a6eb48bf117",tooltip="module task function. "];
  Node27 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node28 [color="midnightblue",fontsize="10",style="solid"];
  Node28 [label="mfield_y_sen_notifyx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd4/a00013.html#a80b82366f7d22e925f279d20328f05c8"];
  Node1 -> Node29 [color="midnightblue",fontsize="10",style="solid"];
  Node29 [label="mfield_y_sen_taskx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd4/a00013.html#adfb4e8d328a4cd1c7639082bef5841a9"];
  Node1 -> Node30 [color="midnightblue",fontsize="10",style="solid"];
  Node30 [label="nov_get_serial_number",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d52/a00023.html#a86b863ea185628aff5a00b4defbbb6e1",tooltip="Reads from EEPROM device serial number. "];
  Node30 -> Node31 [color="midnightblue",fontsize="10",style="solid"];
  Node31 [label="nov_memcpy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dea/a00054.html#a3ff681f3af83ec441535611dac6ada16",tooltip="Standard library memcpy() replacement function to copy data from serial EEPROM to the specified RAM m..."];
  Node31 -> Node32 [color="midnightblue",fontsize="10",style="solid"];
  Node32 [label="spi_put_data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d5e/a00007.html#a19e2dff580e4d1b2198fa9108fca81ac",tooltip="send one byte of data and receive one back at the same time "];
  Node1 -> Node33 [color="midnightblue",fontsize="10",style="solid"];
  Node33 [label="serial_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dfe/a00025.html#ad2b461e9e9044364a28a61cfadcacdd8",tooltip="Init function for srv_serial service. "];
  Node33 -> Node34 [color="midnightblue",fontsize="10",style="solid"];
  Node34 [label="serial_enable_blocking",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/de2/a00024.html#af15ca641f181de14f789d97b00c367ef",tooltip="Init function for srv_serial service. "];
  Node33 -> Node35 [color="midnightblue",fontsize="10",style="solid"];
  Node35 [label="serial_get_command_ack",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/de2/a00024.html#a7fc7421ed15d6e4516e9878e7455d715",tooltip="Function which marks serial buffer as processed, so new command can be taken. "];
  Node1 -> Node36 [color="midnightblue",fontsize="10",style="solid"];
  Node36 [label="spi_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d5e/a00007.html#ae909944aa85ae98323073c628be541aa",tooltip="Init function for srv_spi service. "];
  Node1 -> Node37 [color="midnightblue",fontsize="10",style="solid"];
  Node37 [label="uv_sen_notifyx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/de7/a00014.html#ae2617634df4d3055161f7fb1f148f6da",tooltip="uv module notification function. "];
  Node37 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node37 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node37 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node38 [color="midnightblue",fontsize="10",style="solid"];
  Node38 [label="uv_sen_taskx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/de7/a00014.html#ab4e931568892f0b46a2571d3c480f5c8",tooltip="uv sensor module task function. "];
  Node38 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node39 [color="midnightblue",fontsize="10",style="solid"];
  Node39 [label="x_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d79/a00030.html#a05f27d3148e368ee84a448f3c4b083dd",tooltip="OS internal init. "];
  Node1 -> Node40 [color="midnightblue",fontsize="10",style="solid"];
  Node40 [label="x_init_task",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d79/a00030.html#a1e79db5ed3ab326586129eb4d7b63d46",tooltip="OS task init function. "];
  Node1 -> Node41 [color="midnightblue",fontsize="10",style="solid"];
  Node41 [label="x_loop",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d79/a00030.html#a4bb7a012be733e061c913e7b98df642b",tooltip="OS function which should be called in idle loop. "];
  Node1 -> Node42 [color="midnightblue",fontsize="10",style="solid"];
  Node42 [label="x_start",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d79/a00030.html#aea907663ecaf77bacfb9f0bfdc11f900",tooltip="OS function which starts event scheduling. "];
}
